{"version":3,"file":"chart.js","sourceRoot":"","sources":["../../../src/components/chart.tsx"],"names":[],"mappings":"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","sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport {cn} from \"@/packages/neu/src/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = {light: \"\", dark: \".dark\"} as const\n\nexport type ChartConfig = {\n    [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n} & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n    )\n}\n\ntype ChartContextProps = {\n    config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n    const context = React.useContext(ChartContext)\n\n    if (!context) {\n        throw new Error(\"useChart must be used within a <ChartContainer />\")\n    }\n\n    return context\n}\n\nfunction ChartContainer({\n                            id,\n                            className,\n                            children,\n                            config,\n                            ...props\n                        }: React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n        typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n}) {\n    const uniqueId = React.useId()\n    const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n    return (\n        <ChartContext.Provider value={{config}}>\n            <div\n                data-slot=\"chart\"\n                data-chart={chartId}\n                className={cn(\n                    \"[&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border flex aspect-video justify-center text-xs [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-hidden [&_.recharts-sector]:outline-hidden [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-surface]:outline-hidden\",\n                    className\n                )}\n                {...props}\n            >\n                <ChartStyle id={chartId} config={config}/>\n                <RechartsPrimitive.ResponsiveContainer>\n                    {children}\n                </RechartsPrimitive.ResponsiveContainer>\n            </div>\n        </ChartContext.Provider>\n    )\n}\n\nconst ChartStyle = ({id, config}: { id: string; config: ChartConfig }) => {\n    const colorConfig = Object.entries(config).filter(\n        ([, config]) => config.theme || config.color\n    )\n\n    if (!colorConfig.length) {\n        return null\n    }\n\n    return (\n        <style\n            dangerouslySetInnerHTML={{\n                __html: Object.entries(THEMES)\n                    .map(\n                        ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n                            .map(([key, itemConfig]) => {\n                                const color =\n                                    itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n                                    itemConfig.color\n                                return color ? `  --color-${key}: ${color};` : null\n                            })\n                            .join(\"\\n\")}\n}\n`\n                    )\n                    .join(\"\\n\"),\n            }}\n        />\n    )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nfunction ChartTooltipContent({\n                                 active,\n                                 payload,\n                                 className,\n                                 indicator = \"dot\",\n                                 hideLabel = false,\n                                 hideIndicator = false,\n                                 label,\n                                 labelFormatter,\n                                 labelClassName,\n                                 formatter,\n                                 color,\n                                 nameKey,\n                                 labelKey,\n                             }: React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n    hideLabel?: boolean\n    hideIndicator?: boolean\n    indicator?: \"line\" | \"dot\" | \"dashed\"\n    nameKey?: string\n    labelKey?: string\n}) {\n    const {config} = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n        if (hideLabel || !payload?.length) {\n            return null\n        }\n\n        const [item] = payload\n        const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n        const itemConfig = getPayloadConfigFromPayload(config, item, key)\n        const value =\n            !labelKey && typeof label === \"string\"\n                ? config[label as keyof typeof config]?.label || label\n                : itemConfig?.label\n\n        if (labelFormatter) {\n            return (\n                <div className={cn(\"font-medium\", labelClassName)}>\n                    {labelFormatter(value, payload)}\n                </div>\n            )\n        }\n\n        if (!value) {\n            return null\n        }\n\n        return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n        label,\n        labelFormatter,\n        payload,\n        hideLabel,\n        labelClassName,\n        config,\n        labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n        return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n        <div\n            className={cn(\n                \"border-border/50 bg-background grid min-w-[8rem] items-start gap-1.5 rounded-lg border px-2.5 py-1.5 text-xs shadow-xl\",\n                className\n            )}\n        >\n            {!nestLabel ? tooltipLabel : null}\n            <div className=\"grid gap-1.5\">\n                {payload.map((item, index) => {\n                    const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n                    const itemConfig = getPayloadConfigFromPayload(config, item, key)\n                    const indicatorColor = color || item.payload.fill || item.color\n\n                    return (\n                        <div\n                            key={item.dataKey}\n                            className={cn(\n                                \"[&>svg]:text-muted-foreground flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5\",\n                                indicator === \"dot\" && \"items-center\"\n                            )}\n                        >\n                            {formatter && item?.value !== undefined && item.name ? (\n                                formatter(item.value, item.name, item, index, item.payload)\n                            ) : (\n                                <>\n                                    {itemConfig?.icon ? (\n                                        <itemConfig.icon/>\n                                    ) : (\n                                        !hideIndicator && (\n                                            <div\n                                                className={cn(\n                                                    \"shrink-0 rounded-[2px] border-(--color-border) bg-(--color-bg)\",\n                                                    {\n                                                        \"h-2.5 w-2.5\": indicator === \"dot\",\n                                                        \"w-1\": indicator === \"line\",\n                                                        \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                                            indicator === \"dashed\",\n                                                        \"my-0.5\": nestLabel && indicator === \"dashed\",\n                                                    }\n                                                )}\n                                                style={\n                                                    {\n                                                        \"--color-bg\": indicatorColor,\n                                                        \"--color-border\": indicatorColor,\n                                                    } as React.CSSProperties\n                                                }\n                                            />\n                                        )\n                                    )}\n                                    <div\n                                        className={cn(\n                                            \"flex flex-1 justify-between leading-none\",\n                                            nestLabel ? \"items-end\" : \"items-center\"\n                                        )}\n                                    >\n                                        <div className=\"grid gap-1.5\">\n                                            {nestLabel ? tooltipLabel : null}\n                                            <span className=\"text-muted-foreground\">\n                        {itemConfig?.label || item.name}\n                      </span>\n                                        </div>\n                                        {item.value && (\n                                            <span className=\"text-foreground font-mono font-medium tabular-nums\">\n                        {item.value.toLocaleString()}\n                      </span>\n                                        )}\n                                    </div>\n                                </>\n                            )}\n                        </div>\n                    )\n                })}\n            </div>\n        </div>\n    )\n}\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nfunction ChartLegendContent({\n                                className,\n                                hideIcon = false,\n                                payload,\n                                verticalAlign = \"bottom\",\n                                nameKey,\n                            }: React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n    hideIcon?: boolean\n    nameKey?: string\n}) {\n    const {config} = useChart()\n\n    if (!payload?.length) {\n        return null\n    }\n\n    return (\n        <div\n            className={cn(\n                \"flex items-center justify-center gap-4\",\n                verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n                className\n            )}\n        >\n            {payload.map((item) => {\n                const key = `${nameKey || item.dataKey || \"value\"}`\n                const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n                return (\n                    <div\n                        key={item.value}\n                        className={cn(\n                            \"[&>svg]:text-muted-foreground flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3\"\n                        )}\n                    >\n                        {itemConfig?.icon && !hideIcon ? (\n                            <itemConfig.icon/>\n                        ) : (\n                            <div\n                                className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                                style={{\n                                    backgroundColor: item.color,\n                                }}\n                            />\n                        )}\n                        {itemConfig?.label}\n                    </div>\n                )\n            })}\n        </div>\n    )\n}\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n    config: ChartConfig,\n    payload: unknown,\n    key: string\n) {\n    if (typeof payload !== \"object\" || payload === null) {\n        return undefined\n    }\n\n    const payloadPayload =\n        \"payload\" in payload &&\n        typeof payload.payload === \"object\" &&\n        payload.payload !== null\n            ? payload.payload\n            : undefined\n\n    let configLabelKey: string = key\n\n    if (\n        key in payload &&\n        typeof payload[key as keyof typeof payload] === \"string\"\n    ) {\n        configLabelKey = payload[key as keyof typeof payload] as string\n    } else if (\n        payloadPayload &&\n        key in payloadPayload &&\n        typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n    ) {\n        configLabelKey = payloadPayload[\n            key as keyof typeof payloadPayload\n            ] as string\n    }\n\n    return configLabelKey in config\n        ? config[configLabelKey]\n        : config[key as keyof typeof config]\n}\n\nexport {\n    ChartContainer,\n    ChartTooltip,\n    ChartTooltipContent,\n    ChartLegend,\n    ChartLegendContent,\n    ChartStyle,\n}\n"]}