{"version":3,"file":"slider.js","sourceRoot":"","sources":["../../../src/components/slider.tsx"],"names":[],"mappings":"AAAA,YAAY,CAAA;;;AAEZ,OAAO,KAAK,KAAK,MAAM,OAAO,CAAA;AAC9B,OAAO,KAAK,eAAe,MAAM,wBAAwB,CAAA;AAEzD,OAAO,EAAC,EAAE,EAAC,MAAM,8BAA8B,CAAA;AAE/C,MAAM,MAAM,GAAG,KAAK,CAAC,UAAU,CAG7B,CAAC,EAA8D,EAAE,GAAG,EAAE,EAAE;QAAvE,EAAC,SAAS,EAAE,YAAY,EAAE,KAAK,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,GAAG,OAAW,EAAN,KAAK,cAA7D,oDAA8D,CAAD;IAC5D,MAAM,OAAO,GAAG,KAAK,CAAC,OAAO,CACzB,GAAG,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,EAC9F,CAAC,KAAK,EAAE,YAAY,EAAE,GAAG,EAAE,GAAG,CAAC,CAClC,CAAA;IAED,OAAO,CACH,MAAC,eAAe,CAAC,IAAI,kBACjB,GAAG,EAAE,GAAG,eACE,QAAQ,EAClB,YAAY,EAAE,YAAY,EAC1B,KAAK,EAAE,KAAK,EACZ,GAAG,EAAE,GAAG,EACR,GAAG,EAAE,GAAG,EACR,SAAS,EAAE,EAAE,CAAC,0DAA0D,EAAE,SAAS,CAAC,IAChF,KAAK,eAET,KAAC,eAAe,CAAC,KAAK,IAClB,SAAS,EAAC,4JAA4J,YACtK,KAAC,eAAe,CAAC,KAAK,IAClB,SAAS,EAAC,6GAA6G,GAAE,GACzG,EACvB,KAAK,CAAC,IAAI,CAAC,EAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAC,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE,CAAC,CAChD,KAAC,eAAe,CAAC,KAAK,iBACR,cAAc,EAExB,SAAS,EAAC,oUAAoU,IADzU,KAAK,CAEZ,CACL,CAAC,KACiB,CAC1B,CAAA;AACL,CAAC,CAAC,CAAA;AAEF,OAAO,EAAC,MAAM,EAAC,CAAA","sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport {cn} from \"@/packages/neu/src/lib/utils\"\n\nconst Slider = React.forwardRef<\n    React.ElementRef<typeof SliderPrimitive.Root>,\n    React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({className, defaultValue, value, min = 0, max = 100, ...props}, ref) => {\n    const _values = React.useMemo(\n        () => (Array.isArray(value) ? value : Array.isArray(defaultValue) ? defaultValue : [min, max]),\n        [value, defaultValue, min, max],\n    )\n\n    return (\n        <SliderPrimitive.Root\n            ref={ref}\n            data-slot=\"slider\"\n            defaultValue={defaultValue}\n            value={value}\n            min={min}\n            max={max}\n            className={cn(\"relative flex w-full touch-none select-none items-center\", className)}\n            {...props}\n        >\n            <SliderPrimitive.Track\n                className=\"bg-neumorphic-bg border border-neumorphic-border shadow-neumorphic-inset relative h-3 w-full grow overflow-hidden rounded-full transition-all duration-200\">\n                <SliderPrimitive.Range\n                    className=\"absolute h-full bg-gradient-to-r from-neumorphic-primary to-neumorphic-primary-light shadow-neumorphic-flat\"/>\n            </SliderPrimitive.Track>\n            {Array.from({length: _values.length}, (_, index) => (\n                <SliderPrimitive.Thumb\n                    data-slot=\"slider-thumb\"\n                    key={index}\n                    className=\"bg-white border-2 border-neumorphic-primary shadow-neumorphic-raised block size-6 rounded-full transition-all duration-200 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-neumorphic-primary/50 disabled:pointer-events-none disabled:opacity-50 hover:shadow-neumorphic-flat active:shadow-neumorphic-pressed\"\n                />\n            ))}\n        </SliderPrimitive.Root>\n    )\n})\n\nexport {Slider}\n"]}