{"version":3,"file":"form.js","sourceRoot":"","sources":["../../../src/components/form.tsx"],"names":[],"mappings":"AAAA,YAAY,CAAA;;;AAEZ,OAAO,KAAK,KAAK,MAAM,OAAO,CAAA;AAE9B,OAAO,EAAC,IAAI,EAAC,MAAM,sBAAsB,CAAA;AACzC,OAAO,EACH,UAAU,EAIV,YAAY,EACZ,cAAc,EACd,YAAY,GACf,MAAM,iBAAiB,CAAA;AAExB,OAAO,EAAC,EAAE,EAAC,MAAM,8BAA8B,CAAA;AAC/C,OAAO,EAAC,KAAK,EAAC,MAAM,qCAAqC,CAAA;AAEzD,MAAM,IAAI,GAAG,YAAY,CAAA;AASzB,MAAM,gBAAgB,GAAG,KAAK,CAAC,aAAa,CACxC,EAA2B,CAC9B,CAAA;AAED,MAAM,SAAS,GAAG,CAGhB,EAEuC,EAAE,EAAE;QADpC,KAAK,cADZ,EAEC,CADW;IAEV,OAAO,CACH,KAAC,gBAAgB,CAAC,QAAQ,IAAC,KAAK,EAAE,EAAC,IAAI,EAAE,KAAK,CAAC,IAAI,EAAC,YAChD,KAAC,UAAU,oBAAK,KAAK,EAAI,GACD,CAC/B,CAAA;AACL,CAAC,CAAA;AAED,MAAM,YAAY,GAAG,GAAG,EAAE;IACtB,MAAM,YAAY,GAAG,KAAK,CAAC,UAAU,CAAC,gBAAgB,CAAC,CAAA;IACvD,MAAM,WAAW,GAAG,KAAK,CAAC,UAAU,CAAC,eAAe,CAAC,CAAA;IACrD,MAAM,EAAC,aAAa,EAAC,GAAG,cAAc,EAAE,CAAA;IACxC,MAAM,SAAS,GAAG,YAAY,CAAC,EAAC,IAAI,EAAE,YAAY,CAAC,IAAI,EAAC,CAAC,CAAA;IACzD,MAAM,UAAU,GAAG,aAAa,CAAC,YAAY,CAAC,IAAI,EAAE,SAAS,CAAC,CAAA;IAE9D,IAAI,CAAC,YAAY,EAAE,CAAC;QAChB,MAAM,IAAI,KAAK,CAAC,gDAAgD,CAAC,CAAA;IACrE,CAAC;IAED,MAAM,EAAC,EAAE,EAAC,GAAG,WAAW,CAAA;IAExB,uBACI,EAAE,EACF,IAAI,EAAE,YAAY,CAAC,IAAI,EACvB,UAAU,EAAE,GAAG,EAAE,YAAY,EAC7B,iBAAiB,EAAE,GAAG,EAAE,wBAAwB,EAChD,aAAa,EAAE,GAAG,EAAE,oBAAoB,IACrC,UAAU,EAChB;AACL,CAAC,CAAA;AAMD,MAAM,eAAe,GAAG,KAAK,CAAC,aAAa,CACvC,EAA0B,CAC7B,CAAA;AAED,SAAS,QAAQ,CAAC,EAAkD;QAAlD,EAAC,SAAS,OAAwC,EAAnC,KAAK,cAApB,aAAqB,CAAD;IAClC,MAAM,EAAE,GAAG,KAAK,CAAC,KAAK,EAAE,CAAA;IAExB,OAAO,CACH,KAAC,eAAe,CAAC,QAAQ,IAAC,KAAK,EAAE,EAAC,EAAE,EAAC,YACjC,yCACc,WAAW,EACrB,SAAS,EAAE,EAAE,CAAC,YAAY,EAAE,SAAS,CAAC,IAClC,KAAK,EACX,GACqB,CAC9B,CAAA;AACL,CAAC;AAED,SAAS,SAAS,CAAC,EAGmD;QAHnD,EACI,SAAS,OAEsC,EAD5C,KAAK,cAFZ,aAGC,CADW;IAE3B,MAAM,EAAC,KAAK,EAAE,UAAU,EAAC,GAAG,YAAY,EAAE,CAAA;IAE1C,OAAO,CACH,KAAC,KAAK,+BACQ,YAAY,gBACV,CAAC,CAAC,KAAK,EACnB,SAAS,EAAE,EAAE,CAAC,oCAAoC,EAAE,SAAS,CAAC,EAC9D,OAAO,EAAE,UAAU,IACf,KAAK,EACX,CACL,CAAA;AACL,CAAC;AAED,SAAS,WAAW,CAAC,EAA6C;QAAzC,KAAK,cAAT,EAAU,CAAD;IAC1B,MAAM,EAAC,KAAK,EAAE,UAAU,EAAE,iBAAiB,EAAE,aAAa,EAAC,GAAG,YAAY,EAAE,CAAA;IAE5E,OAAO,CACH,KAAC,IAAI,+BACS,cAAc,EACxB,EAAE,EAAE,UAAU,sBAEV,CAAC,KAAK;YACF,CAAC,CAAC,GAAG,iBAAiB,EAAE;YACxB,CAAC,CAAC,GAAG,iBAAiB,IAAI,aAAa,EAAE,kBAEnC,CAAC,CAAC,KAAK,IACjB,KAAK,EACX,CACL,CAAA;AACL,CAAC;AAED,SAAS,eAAe,CAAC,EAAgD;QAAhD,EAAC,SAAS,OAAsC,EAAjC,KAAK,cAApB,aAAqB,CAAD;IACzC,MAAM,EAAC,iBAAiB,EAAC,GAAG,YAAY,EAAE,CAAA;IAE1C,OAAO,CACH,uCACc,kBAAkB,EAC5B,EAAE,EAAE,iBAAiB,EACrB,SAAS,EAAE,EAAE,CAAC,+BAA+B,EAAE,SAAS,CAAC,IACrD,KAAK,EACX,CACL,CAAA;AACL,CAAC;AAED,SAAS,WAAW,CAAC,EAAgD;;QAAhD,EAAC,SAAS,OAAsC,EAAjC,KAAK,cAApB,aAAqB,CAAD;IACrC,MAAM,EAAC,KAAK,EAAE,aAAa,EAAC,GAAG,YAAY,EAAE,CAAA;IAC7C,MAAM,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,MAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,OAAO,mCAAI,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAA;IAElE,IAAI,CAAC,IAAI,EAAE,CAAC;QACR,OAAO,IAAI,CAAA;IACf,CAAC;IAED,OAAO,CACH,uCACc,cAAc,EACxB,EAAE,EAAE,aAAa,EACjB,SAAS,EAAE,EAAE,CAAC,0BAA0B,EAAE,SAAS,CAAC,IAChD,KAAK,cAER,IAAI,IACL,CACP,CAAA;AACL,CAAC;AAED,OAAO,EACH,YAAY,EACZ,IAAI,EACJ,QAAQ,EACR,SAAS,EACT,WAAW,EACX,eAAe,EACf,WAAW,EACX,SAAS,GACZ,CAAA","sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport {Slot} from \"@radix-ui/react-slot\"\nimport {\n    Controller,\n    type ControllerProps,\n    type FieldPath,\n    type FieldValues,\n    FormProvider,\n    useFormContext,\n    useFormState,\n} from \"react-hook-form\"\n\nimport {cn} from \"@/packages/neu/src/lib/utils\"\nimport {Label} from \"@/packages/neu/src/components/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n    TFieldValues extends FieldValues = FieldValues,\n    TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\n> = {\n    name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n    {} as FormFieldContextValue\n)\n\nconst FormField = <\n    TFieldValues extends FieldValues = FieldValues,\n    TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\n>({\n      ...props\n  }: ControllerProps<TFieldValues, TName>) => {\n    return (\n        <FormFieldContext.Provider value={{name: props.name}}>\n            <Controller {...props} />\n        </FormFieldContext.Provider>\n    )\n}\n\nconst useFormField = () => {\n    const fieldContext = React.useContext(FormFieldContext)\n    const itemContext = React.useContext(FormItemContext)\n    const {getFieldState} = useFormContext()\n    const formState = useFormState({name: fieldContext.name})\n    const fieldState = getFieldState(fieldContext.name, formState)\n\n    if (!fieldContext) {\n        throw new Error(\"useFormField should be used within <FormField>\")\n    }\n\n    const {id} = itemContext\n\n    return {\n        id,\n        name: fieldContext.name,\n        formItemId: `${id}-form-item`,\n        formDescriptionId: `${id}-form-item-description`,\n        formMessageId: `${id}-form-item-message`,\n        ...fieldState,\n    }\n}\n\ntype FormItemContextValue = {\n    id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n    {} as FormItemContextValue\n)\n\nfunction FormItem({className, ...props}: React.ComponentProps<\"div\">) {\n    const id = React.useId()\n\n    return (\n        <FormItemContext.Provider value={{id}}>\n            <div\n                data-slot=\"form-item\"\n                className={cn(\"grid gap-2\", className)}\n                {...props}\n            />\n        </FormItemContext.Provider>\n    )\n}\n\nfunction FormLabel({\n                       className,\n                       ...props\n                   }: React.ComponentProps<typeof LabelPrimitive.Root>) {\n    const {error, formItemId} = useFormField()\n\n    return (\n        <Label\n            data-slot=\"form-label\"\n            data-error={!!error}\n            className={cn(\"data-[error=true]:text-destructive\", className)}\n            htmlFor={formItemId}\n            {...props}\n        />\n    )\n}\n\nfunction FormControl({...props}: React.ComponentProps<typeof Slot>) {\n    const {error, formItemId, formDescriptionId, formMessageId} = useFormField()\n\n    return (\n        <Slot\n            data-slot=\"form-control\"\n            id={formItemId}\n            aria-describedby={\n                !error\n                    ? `${formDescriptionId}`\n                    : `${formDescriptionId} ${formMessageId}`\n            }\n            aria-invalid={!!error}\n            {...props}\n        />\n    )\n}\n\nfunction FormDescription({className, ...props}: React.ComponentProps<\"p\">) {\n    const {formDescriptionId} = useFormField()\n\n    return (\n        <p\n            data-slot=\"form-description\"\n            id={formDescriptionId}\n            className={cn(\"text-muted-foreground text-sm\", className)}\n            {...props}\n        />\n    )\n}\n\nfunction FormMessage({className, ...props}: React.ComponentProps<\"p\">) {\n    const {error, formMessageId} = useFormField()\n    const body = error ? String(error?.message ?? \"\") : props.children\n\n    if (!body) {\n        return null\n    }\n\n    return (\n        <p\n            data-slot=\"form-message\"\n            id={formMessageId}\n            className={cn(\"text-destructive text-sm\", className)}\n            {...props}\n        >\n            {body}\n        </p>\n    )\n}\n\nexport {\n    useFormField,\n    Form,\n    FormItem,\n    FormLabel,\n    FormControl,\n    FormDescription,\n    FormMessage,\n    FormField,\n}\n"]}